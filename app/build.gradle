//apply plugin: 'kotlin-kapt'
/*apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'*/



plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'

    id 'com.google.dagger.hilt.android'
    id("com.google.devtools.ksp")
    id 'org.jetbrains.kotlin.plugin.compose'
    id("androidx.room")
    // id 'com.google.devtools.ksp' version '1.8.0-1.0.8'

}


android {


    compileSdk 34
    packagingOptions {
        resources {
            excludes += ['META-INF/atomicfu.kotlin_module']
        }
    }
    buildFeatures {
        viewBinding = true
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlin {
        jvmToolchain(20)
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        viewBinding = true
        compose = true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }

    java {
        toolchain {
            languageVersion.set(JavaLanguageVersion.of(20))
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    signingConfigs {
        release {
            storeFile file("/Users/sasikumar/Documents/AAAAndroidProjects/aaa2022/gkey/expensecalculator/Sql_googlekey")
            storePassword "aaa123"
            keyAlias "Key0"
            keyPassword "aaa123"
        }
    }

    defaultConfig {
        applicationId "aaa.app.android.sqlroomsample"
        minSdkVersion 26
        targetSdkVersion 34
        versionCode 9
        versionName "1.0.9"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            multiDexEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled true
            shrinkResources true
            debuggable true
            multiDexEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    room {
        schemaDirectory("$projectDir/schemas")
    }

    namespace 'aaa.app.android.sqlroomsample'

}

dependencies {

    implementation libs.androidx.material3.android
    def composeBom = libs.androidx.compose.bom
    implementation(composeBom)
    androidTestImplementation(composeBom)

    implementation libs.androidx.runtime
    implementation libs.androidx.ui
    implementation libs.androidx.foundation
    implementation libs.androidx.foundation.layout
    implementation libs.androidx.material
    implementation libs.androidx.runtime.livedata
    implementation libs.androidx.ui.tooling
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation libs.androidx.core.ktx
    implementation platform(libs.kotlin.bom)
    implementation libs.androidx.lifecycle.runtime.ktx.v283
    implementation libs.androidx.activity.compose.v191
    implementation libs.androidx.fragment.ktx
    implementation libs.androidx.appcompat
    implementation libs.androidx.core.ktx
    implementation libs.androidx.constraintlayout
    implementation libs.material.v1120
    implementation libs.androidx.vectordrawable
    implementation libs.androidx.navigation.fragment
    implementation libs.androidx.navigation.ui.ktx
    implementation libs.androidx.lifecycle.extensions
    implementation libs.androidx.junit.ktx
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit.v121
    androidTestImplementation libs.androidx.espresso.core.v361


    // Room components
    def room_version = "2.6.1"

    implementation(libs.androidx.room.runtime.v261)
    implementation(libs.androidx.room.ktx.v261)
    ksp(libs.androidx.room.compiler.v250)
    //annotationProcessor("androidx.room:room-compiler:$room_version")


    // optional - Kotlin Extensions and Coroutines support for Room


// Lifecycle components
    implementation libs.androidx.lifecycle.runtime.ktx.v284
    implementation libs.androidx.lifecycle.extensions
    implementation(libs.androidx.lifecycle.common.java8)
    implementation libs.androidx.lifecycle.viewmodel.ktx.v283

    implementation(libs.androidx.lifecycle.runtime.compose.v283)
    implementation(libs.runtime.livedata)
    // hilt

    implementation(libs.hilt.android)
    ksp(libs.hilt.compiler)
    implementation(libs.androidx.hilt.navigation.compose)


// Kotlin components
    api libs.kotlinx.coroutines.core
    api libs.kotlinx.coroutines.android

// Material design
    implementation libs.material.v1120

    // implementation platform('com.google.firebase:firebase-bom:32.8.0')
    // implementation 'com.google.firebase:firebase-analytics-ktx'
    //  implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation libs.support.multidex


    implementation(libs.androidx.navigation.compose)
// Testing
    testImplementation libs.junit
    androidTestImplementation libs.androidx.core.testing
    androidTestImplementation libs.androidx.junit.v121


    implementation(libs.kotlin.stdlib)
    implementation(libs.kotlinx.coroutines.android)

    implementation(libs.androidx.core.ktx)
    implementation(libs.androidx.navigation.compose)
    implementation(libs.androidx.activity.compose)
    implementation(libs.androidx.constraintlayout.compose)

    implementation(libs.androidx.compose.runtime)
    implementation(libs.androidx.compose.foundation)
    implementation(libs.androidx.compose.foundation.layout)
    implementation(libs.androidx.compose.ui)
    implementation(libs.androidx.compose.ui.util)
    implementation(libs.androidx.compose.material)
    implementation(libs.androidx.compose.animation)
    implementation(libs.androidx.compose.material.iconsExtended)
    implementation(libs.androidx.compose.ui.tooling.preview)
    debugImplementation(libs.androidx.compose.ui.tooling)

    implementation(libs.coil.kt.compose)
    androidTestImplementation(libs.androidx.activity.compose)
    androidTestImplementation(libs.junit)
    androidTestImplementation(libs.androidx.test.core)
    androidTestImplementation(libs.androidx.test.rules)
    androidTestImplementation(libs.androidx.test.ext.junit)
    androidTestImplementation(libs.androidx.compose.ui.test.junit4)
    androidTestImplementation(libs.androidx.compose.ui.test)
    debugImplementation(libs.androidx.compose.ui.test.manifest)
}

